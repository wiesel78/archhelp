################################################
#
#  Lighttpd Configuration
#
################################################


################################################
# Basic configuration
################################################

# ssl port is default port
server.port = 443

# enable ipv4 and ipv6 together
server.use-ipv6 = "enable"

# group and owner
server.username	= "http"
server.groupname = "http"

# document and log root
server.document-root = "/srv/http"
server.errorlog	= "/var/log/lighttpd/error.log"
server.breakagelog = "/var/log/lighttpd/breakage.log"
debug.log-request-handling = "enable"

# enable directory if no index.* exists
dir-listing.encoding = "utf-8"
dir-listing.activate = "enable"

# loaded modules
server.modules = (  "mod_access",
                    "mod_fastcgi", 
                    "mod_cgi",
                    "mod_accesslog", 
                    "mod_redirect",
		    "mod_rewrite",
                    "mod_auth",
                    "mod_proxy",
                    )

# index files
index-file.names = ( "index.html", "index.htm1" )

# mimetypes
include "conf.d/mimetypes.conf"

static-file.exclude-extensions = (
 ".fcgi",
)

# deny access to following files
url.access-deny = (
 "~",
 ".ini",
 ".inc",
 ".cfg",
 ".tpl",
 ".bak",
 ".dist",
 ".orig",
 ".htaccess",
 ".htpasswd",
 ".example",
 ".sample",
 ".lang",
 "pass",
 "/config",
 "/temp",
 "/logs"
)


## python ##
#index-file.names += ( "index.py", )
#static-file.exclude-extensions += ( ".py", )
#cgi.assign = ( ".py" => "/usr/bin/python" )


## php ##
index-file.names += ( "index.php", )
static-file.exclude-extensions += ( ".php", )
fastcgi.server = ( ".php" => 
    ((
            "bin-path" => "/usr/bin/php-cgi",
            "socket" => "/tmp/php.socket"
        )
    ) 
)

## stream auth | htpasswd pass stored as md5 | must be under doc-root
auth.backend = "htpasswd"
auth.backend.htpasswd.userfile = "/srv/http/stream/pass"
auth.require = (
    # streams
    "/stream/" => (
    "method" => "basic",
    "realm" => "Stream WebClient",
    "require" => "user=xxx"
    )
)

## port proxy for streams 
# mpd daemons running on ports: 77000/7701/7702
# protect streams with basic authentication
$HTTP["url"] =~ "^/mpd0" {
	auth.require = ( "" => (
    		"method" => "basic",
    		"realm" => "Stream 1",
    		"require" => "user=xxx"
    		)
	)
	proxy.server = ( "" => ( ( "host" => "127.0.0.1",
				   "port" => 7700
				) )
			)
}

$HTTP["url"] =~ "^/mpd1" {
	auth.require = ( "" => (
                "method" => "basic",
                "realm" => "Stream 2",
                "require" => "user=xxx"
                ) 
        )
	proxy.server = ( "" => ( ( "host" => "127.0.0.1",
				   "port" => 7701
				) )
			)
}

$HTTP["url"] =~ "^/mpd2" {
	auth.require = ( "" => (
                "method" => "basic",
                "realm" => "Stream 3",
                "require" => "user=xxx"
                ) 
        )
	proxy.server = ( "" => ( ( "host" => "127.0.0.1",
				   "port" => 7702
				) )
			)
}

##### ssl configuration | ssl only server #####
# cert created with openssl req -new -x509 -keyout server.pem -out server.pem -days 365 -nodes
ssl.engine = "enable"
ssl.pemfile = "/etc/ssl/private/server.pem"

## redirect everything from http:// to https://
$SERVER["socket"] == ":80" {
    $HTTP["host"] =~ "(.*)" {
        url.redirect = ( "^/(.*)" => "https://%1/$1")
    }
}


##### linux performance tuning #####
# sysepoll is recommended at linux 2.6
server.event-handler = "linux-sysepoll"

# linux-sendfile for small files
# writev for large files
server.network-backend = "linux-sendfile"

# stat() call caching
# modes are disable, simple, fam
server.stat-cache-engine = "simple"

# follow symlinks
server.follow-symlink = "enable"

# output compression
var.cache_dir = "var/cache/lighttpd"
include "conf.d/compress.conf"

# deny googlebots
$HTTP["useragent"] =~ "Google" {
	url.access-deny = ( "" )
}
